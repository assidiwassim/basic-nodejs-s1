name: CI/CD of my basic-nodejs-s1

on:
  push:
    branches: [ "main" ]

jobs:

  build-and-push:

    runs-on: ubuntu-latest 

    steps:

      - name: Clone code from github
        uses: actions/checkout@v4

      - name: build docker image
        run: docker build -t basic-nodejs-s1-image-extra:latest .

      - name: tag docker image
        run: docker tag basic-nodejs-s1-image-extra:latest ${{ secrets.DOCKERHUB_USERNAME }}/basic-nodejs-s1-image-extra:latest

      - name: list of images
        run: docker images

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: push docker image to docker hub
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/basic-nodejs-s1-image-extra:latest

  test:

    runs-on: ubuntu-latest 

    needs: ["build-and-push"]
    steps:
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: pull docker image from docker hub
      run: docker pull ${{ secrets.DOCKERHUB_USERNAME }}/basic-nodejs-s1-image-extra:latest

    - name: run test on docker container
      run: docker run ${{ secrets.DOCKERHUB_USERNAME }}/basic-nodejs-s1-image-extra:latest npm test``

  deploy: 

    runs-on: ubuntu-latest 

    needs: ["test"]


    steps:

      - name: connect to the VPS using SSH.
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password:  ${{ secrets.VPS_PASSWORD }}

          script: | 
 

                sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/basic-nodejs-s1-image-extra:latest
            
                sudo docker stop basic-nodejs-s1-container 

                sudo docker rm basic-nodejs-s1-container 

                old_image_id=$(sudo docker images -q ${{ secrets.DOCKERHUB_USERNAME }}/basic-nodejs-s1-image-extra:latest)
                if [ ! -z "$old_image_id" ]; then
                    sudo docker rmi -f $old_image_id
                fi

                sudo docker run -d -p 3001:3000 --name basic-nodejs-s1-container ${{ secrets.DOCKERHUB_USERNAME }}/basic-nodejs-s1-image-extra:latest
